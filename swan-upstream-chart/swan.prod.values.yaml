jupyterhub:
  singleuser:
    uid: 0
    fsGid: 0
    storage:
      type: none
    image:
      name: "gitlab-registry.cern.ch/swan/docker-images/systemuser"
      tag: "daily"
    cloudMetadata:
      enabled: true
    networkPolicy:
      enabled: false
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
      traefik.ingress.kubernetes.io/frontend-entry-points: http, https
      traefik.ingress.kubernetes.io/redirect-entry-point: https
    tls:
      - secretName: swan-tls-cert
    hosts:
      - swan-k8s.cern.ch
  proxy:
    service:
      type: ClusterIP
    chp:
      image:
        name: "jupyterhub/configurable-http-proxy"
        tag: "4.2.0"
        pullPolicy: IfNotPresent
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
    # placeholder for hub secret token
    secretToken:
  hub:
    uid: 0
    fsGid: 0
    deploymentStrategy:
      type: RollingUpdate
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    image:
      name: "gitlab-registry.cern.ch/swan/docker-images/jupyterhub"
      tag: "1.1.0-cern1"
      pullPolicy: "Always"
    extraEnv:
      OAUTH2_AUTHORIZE_URL: https://oauth.web.cern.ch/OAuth/Authorize
      OAUTH2_TOKEN_URL: https://oauth.web.cern.ch/OAuth/Token
      OAUTH_CALLBACK_URL: https://swan-k8s.cern.ch/hub/oauth_callback
      # placeholder for hub auth state cryptographic key
      JUPYTERHUB_CRYPT_KEY:
    extraVolumeMounts:
      - name: swan-jh
        mountPath: /srv/jupyterhub/jupyterhub_form.html
        subPath: jupyterhub_form.html
      - name: swan-jh
        mountPath: /srv/jupyterhub/swan_config.py
        subPath: swan_config.py
      - name: swan-secrets
        mountPath: /srv/jupyterhub/private/eos.cred
        subPath: eos.cred
      - name: swan-secrets
        mountPath: /srv/jupyterhub/private/hadoop.cred
        subPath: hadoop.cred
      - name: swan-secrets
        mountPath: /srv/jupyterhub/private/sparkk8s.cred
        subPath: sparkk8s.cred
      - name: swan-cull-scripts
        mountPath: /srv/jupyterhub/culler/check_ticket.sh
        subPath: cull_check_ticket.sh
      - name: swan-cull-scripts
        mountPath: /srv/jupyterhub/culler/delete_ticket.sh
        subPath: cull_delete_ticket.sh
      - name: swan-tokens-scripts
        mountPath: /srv/jupyterhub/private/eos_token.sh
        subPath: eos_token.sh
      - name: swan-tokens-scripts
        mountPath: /srv/jupyterhub/private/hadoop_token.sh
        subPath: hadoop_token.sh
      - name: swan-tokens-scripts
        mountPath: /srv/jupyterhub/private/webhdfs_token.sh
        subPath: webhdfs_token.sh
      - name: swan-tokens-scripts
        mountPath: /srv/jupyterhub/private/sparkk8s_token.sh
        subPath: sparkk8s_token.sh
      - name: cvmfsd
        mountPath: /cvmfs
        mountPropagation: HostToContainer
    extraVolumes:
      - name: cvmfsd
        hostPath:
          path: /var/cvmfs
      - name: swan-jh
        configMap:
          name: swan-scripts
          items:
          - key: jupyterhub_form.html
            path: jupyterhub_form.html
          - key: swan_config.py
            path: swan_config.py
      - name: swan-cull-scripts
        configMap:
          name: swan-scripts
          items:
          - key: cull_check_ticket.sh
            path: cull_check_ticket.sh
          - key: cull_delete_ticket.sh
            path: cull_delete_ticket.sh
          defaultMode: 356 # 0544 perm
      - name: swan-tokens-scripts
        configMap:
          name: swan-scripts-env-prod
          items:
          - key: hadoop_token.sh
            path: hadoop_token.sh
          - key: webhdfs_token.sh
            path: webhdfs_token.sh
          - key: eos_token.sh
            path: eos_token.sh
          - key: sparkk8s_token.sh
            path: sparkk8s_token.sh
          defaultMode: 356 # 0544 perm
      - name: swan-secrets
        secret:
          secretName: swan
          items:
          - key: eos.cred
            path: eos.cred
          - key: hadoop.cred
            path: hadoop.cred
          - key: sparkk8s.cred
            path: sparkk8s.cred
    extraConfig:
      swanConf: |
        exec(open('/srv/jupyterhub/swan_config.py').read())
    db:
      type: postgres
      url: postgres+psycopg2://swanjh@dbod-jupyterhub.cern.ch:6602/swanjh
      # placeholder for postgres password
      password:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/path: /hub/metrics
    networkPolicy:
      enabled: false
    # placeholder for hub cookieSecret
    cookieSecret:
  auth:
    type: custom
    admin:
      users:
        - pkothuri
    whitelist:
      users:
        - pkothuri
        - pmrowczy
        - nbarros
        - mmartinm
        - jlunadur
        - ekleszcz
        - rcastell
        - canali
        - dalvesde
        - ebocchi
        - moscicki
        - etejedor
        - mato
        - ozapatam
        - rchatter
        - lgray
    custom:
      className: oauthenticator.generic.GenericOAuthenticator
      config:
        client_id: "swan-k8s.cern.ch"
        # placeholder for oauth secret to be filed by secrets.yaml
        client_secret:
        token_url: "https://oauth.web.cern.ch/OAuth/Token"
        userdata_url: "https://oauthresource.web.cern.ch/api/User"
        groupdata_url: "https://oauthresource.web.cern.ch/api/Group"
        userdata_method: GET
        userdata_params: {'state': 'state'}
        username_key: username
  rbac:
    enabled: true
  cull:
    enabled: false
  scheduling:
    userScheduler:
      enabled: false
    podPriority:
      enabled: false
  prePuller:
    hook:
      enabled: true
    continuous:
      enabled: false
  debug:
    enabled: true
  custom:
    cull:
      enabled: true
      period: 600
      checkEosAuth:
        enabled: true
# placeholders for swan credentials
swan:
  secrets:
    eos:
      cred:
    hadoop:
      cred:
    sparkk8s:
      cred:
    ingress:
      cert:
      key:
