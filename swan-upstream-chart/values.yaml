jupyterhub:
  singleuser:
    uid: 0
    fsGid: 0
    storage:
      type: none
    image:
      name: gitlab-registry.cern.ch/swan/docker-images/systemuser
      tag: v5.1.1
    cloudMetadata:
      enabled: true
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
      traefik.ingress.kubernetes.io/frontend-entry-points: http, https
      traefik.ingress.kubernetes.io/redirect-entry-point: https
    tls:
      - secretName: swan-tls-cert
    hosts:
      - swan-k8s.cern.ch
    enabled: true
  proxy:
    service:
      type: ClusterIP
    secretToken: 9840739268135b56fc340d5c8b4b5962c489479eecfd0e1e7b6bbb108697b90a
  hub:
    uid: 0
    fsGid: 0
    image:
      # WARN: pull policy Always not possible, remember always about new tag
      name: "gitlab-registry.cern.ch/db/spark-service/docker-registry/jupyterhub"
      tag: "101019"
    extraEnv:
      OAUTH2_AUTHORIZE_URL: https://oauth.web.cern.ch/OAuth/Authorize
      OAUTH2_TOKEN_URL: https://oauth.web.cern.ch/OAuth/Token
      OAUTH_CALLBACK_URL: https://swan-k8s.cern.ch/hub/oauth_callback
      JUPYTERHUB_CRYPT_KEY: 34639d457a10b13a99a653728ad6a146bdca66ad7e5519a595a8d8521e945031
    extraVolumeMounts:
      - name: swan-jh
        mountPath: /srv/jupyterhub/jupyterhub_form.html
        subPath: jupyterhub_form.html
      - name: swan-jh
        mountPath: /srv/jupyterhub/swan_config.py
        subPath: swan_config.py
      - name: swan-scripts
        mountPath: /srv/jupyterhub/culler/check_ticket.sh
        subPath: check_ticket.sh
      - name: swan-scripts
        mountPath: /srv/jupyterhub/culler/delete_ticket.sh
        subPath: delete_ticket.sh
      - name: swan-scripts
        mountPath: /srv/jupyterhub/private/eos_token.sh
        subPath: eos_token.sh
      - name: swan-scripts
        mountPath: /srv/jupyterhub/private/hadoop_token.sh
        subPath: hadoop_token.sh
      - name: swan-scripts
        mountPath: /srv/jupyterhub/private/webhdfs_token.sh
        subPath: webhdfs_token.sh
      - name: cvmfs-sft-cern-ch
        mountPath: /cvmfs/sft.cern.ch
    extraVolumes:
      - name: cvmfs-sft-cern-ch
        persistentVolumeClaim:
          claimName: cvmfs-sft-cern-ch-pvc
      - name: swan-jh
        configMap:
          name: swan
          items:
          - key: jupyterhub_form.html
            path: jupyterhub_form.html
          - key: swan_config.py
            path: swan_config.py
      - name: swan-scripts
        configMap:
          name: swan
          items:
          - key: check_ticket.sh
            path: check_ticket.sh
          - key: delete_ticket.sh
            path: delete_ticket.sh
          - key: eos_token.sh
            path: eos_token.sh
          - key: hadoop_token.sh
            path: hadoop_token.sh
          - key: webhdfs_token.sh
            path: webhdfs_token.sh
          defaultMode: 356 # 0544 perm
      #- name: swan-secrets
      #  secret:
      #    secretName: swan-secrets
      #    items:
    extraConfig:
      swanConf: |
        exec(open('/srv/jupyterhub/swan_config.py').read())
    db:
      type: postgres
      url: postgres+psycopg2://swanjh@dbod-jupyterhub.cern.ch:6602/swanjh
    cookieSecret: ca4ac8ac414707020a7db74341eaf25de01f6d0bd73f4ceb9d2a197f1e3b9f32
  auth:
    type: custom
    admin:
      users:
        - pkothuri
    whitelist:
      users:
        - pkothuri
        - pmrowczy
        - nbarros
        - mmartinm
        - jlunadur
        - ekleszcz
        - rcastell
        - canali
    custom:
      className: oauthenticator.generic.GenericOAuthenticator
      config:
        client_id: "swan-k8s.cern.ch"
        token_url: "https://oauth.web.cern.ch/OAuth/Token"
        userdata_url: "https://oauthresource.web.cern.ch/api/User"
        groupdata_url: "https://oauthresource.web.cern.ch/api/Group"
        userdata_method: GET
        userdata_params: {'state': 'state'}
        username_key: username
        group_whitelist:
          - swan-admins
  rbac:
    enabled: true
  cull:
    enabled: false
  scheduling:
    userScheduler:
      enabled: false
    podPriority:
      enabled: false
  prePuller:
    hook:
      enabled: true
    continuous:
      enabled: false
  custom:
    # all swan custom helm values
    cvmfs:
      repositories:
        - sft.cern.ch
        - sft-nightlies.cern.ch
        - cms.cern.ch
        - atlas.cern.ch
        - lhcb.cern.ch
        - compass.cern.ch
      prefetcher:
        image:
          name: gitlab-registry.cern.ch/swan/docker-images/cvmfs-prefetcher
          tag: v1.0
        enable: true
